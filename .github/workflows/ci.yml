name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type checking
      run: npm run check

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Serve and audit with Lighthouse
      run: |
        npm run preview &
        sleep 10
        npx lighthouse http://localhost:4173 --only-categories=performance,accessibility,best-practices,seo --chrome-flags="--headless" --output=json --output-path=./lighthouse-results.json
      
    - name: Check Lighthouse scores
      run: |
        node -e "
        const results = require('./lighthouse-results.json');
        const scores = results.categories;
        console.log('Performance:', scores.performance.score * 100);
        console.log('Accessibility:', scores.accessibility.score * 100);
        console.log('Best Practices:', scores['best-practices'].score * 100);
        console.log('SEO:', scores.seo.score * 100);
        
        const thresholds = {
          performance: 90,
          accessibility: 90,
          'best-practices': 90,
          seo: 95
        };
        
        let failed = false;
        Object.entries(thresholds).forEach(([key, threshold]) => {
          const score = scores[key].score * 100;
          if (score < threshold) {
            console.error('❌', key, 'score', score, 'is below threshold', threshold);
            failed = true;
          } else {
            console.log('✅', key, 'score', score, 'meets threshold', threshold);
          }
        });
        
        if (failed) process.exit(1);
        "